-0.25539823371759307, -0.11438489376989976, -0.042917826027815194,
-0.44404881983113265, -0.2351860958862155, 7.133248595252565E-4,
0.2733901130357816, 0.0798803810872835, 0.13424466242045202,
-0.17988810543265088, -0.06959818166633289, -0.052984122038796995,
0.23679969117439753, 0.1246954922791229, 0.0011198731296327134,
-0.06006536908640811, -0.051016879199997776, 0.039938267384146374,
-0.4367380847049636, -0.1399780105169999, -0.1887910789357849,
0.21723939964135036, 0.10869084264181658, 0.01286230814788758,
0.10494180720165937, 0.018903137287205208, 0.07592694528298242,
0.38183640235621275, 0.18763826716664564, 0.029671938678260422,
0.38798266419041766, 0.9072029511410794, 0.048308797953611905,
-0.17413381222259025, -0.03716307199664534, -0.8479701841446458,
-0.10833506759902499, 0.028426475478040517, -0.4866469829943332,
0.03388823110680312, 0.06183822086819907, 0.20835778158729165
), byrow=TRUE, nrow=16, ncol=3)
colnames(tmp_0)<-c("Keperluan Rekabentuk","Operasi Strategik","Pelaksanaan")
rownames(tmp_0)<-c("Impak","Keperluan","KeperluanRekabentuk10","KeperluanRekabentuk11","KeperluanRekabentuk12","KeperluanRekabentuk3","KeperluanRekabentuk4","KeperluanRekabentuk5","KeperluanRekabentuk6","KeperluanRekabentuk9","KeperluanRekebentuk7","KeperluanRekebentuk8","Objektif","Pelaksanaan1","Pelaksanaan2","Pelaksanaan3")
DiscriminantValidityCrossLoadings<-tmp_0
rm(tmp_0)
tmp_0<-matrix(c(
3.9886363636363638, 4.0, 2.0, 5.0, 0.6409802775853899, 0.16570015387439163, -0.24081829666902144, 132.0,
4.181818181818182, 4.0, 3.0, 5.0, 0.5375052053050534, -0.33033861497697137, 0.007646685147434589, 132.0,
4.204545454545454, 4.0, 3.0, 5.0, 0.6122318381883288, -0.49169921807628825, -0.14995877386960393, 132.0,
4.181818181818182, 4.0, 3.0, 5.0, 0.6721537276611768, -0.8023284547169762, -0.23524652926253872, 132.0,
4.484848484848484, 4.0, 4.0, 5.0, 0.4997703788627467, -2.0271881248026915, 0.06133308489283435, 132.0,
4.303030303030303, 4.0, 3.0, 5.0, 0.5895477714649612, -0.5855072560722885, -0.201241738304964, 132.0,
4.159090909090909, 4.0, 3.0, 5.0, 0.5881345117035297, -0.25289645263359306, -0.049848157307911665, 132.0,
4.515151515151516, 5.0, 3.0, 5.0, 0.5571144336621283, -0.7002780634788572, -0.5921979578648108, 132.0,
3.992424242424242, 4.0, 2.0, 5.0, 0.7016885707501553, -0.5761695951089858, -0.12249962103783525, 132.0,
4.386363636363637, 4.0, 3.0, 5.0, 0.6111058936249433, -0.6343081489657472, -0.4617333454588523, 132.0,
3.9242424242424243, 4.0, 3.0, 5.0, 0.6230571271197602, -0.4195104749981313, 0.0539681783836729, 132.0,
4.348484848484849, 4.0, 3.0, 5.0, 0.5638725474523756, -0.7108894330162379, -0.14804927355801542, 132.0,
4.507575757575758, 4.5, 3.5, 5.0, 0.4437480195638628, -1.436536772856819, -0.16143634223015327, 132.0,
4.098484848484849, 4.0, 3.0, 5.0, 0.649706792666583, -0.6334812106080281, -0.10027523171295451, 132.0,
4.7272727272727275, 5.0, 4.0, 5.0, 0.4453617714151233, -0.9487800636056396, -1.0323896562668906, 132.0,
4.128787878787879, 4.0, 3.0, 5.0, 0.644384872646387, -0.6137372790779207, -0.12769873037816565, 132.0
), byrow=TRUE, nrow=16, ncol=8)
colnames(tmp_0)<-c("Mean","Median","Min","Max","Standard Deviation","Excess Kurtosis","Skewness","Number of Observations Used")
rownames(tmp_0)<-c("Impak","Keperluan","KeperluanRekabentuk10","KeperluanRekabentuk11","KeperluanRekabentuk12","KeperluanRekabentuk3","KeperluanRekabentuk4","KeperluanRekabentuk5","KeperluanRekabentuk6","KeperluanRekabentuk9","KeperluanRekebentuk7","KeperluanRekebentuk8","Objektif","Pelaksanaan1","Pelaksanaan2","Pelaksanaan3")
IndicatorData_Original_MVDescriptives<-tmp_0
rm(tmp_0)
tmp_0<-matrix(c(
0.06225623241088444, 0.06225623241088444,
0.5271140324637358, 0.5271140324637359,
0.10912307055941566, 0.10912307055941577,
71.05388296174712, 71.05388296174712,
0.7218840964651615, 0.7218840964651615
), byrow=TRUE, nrow=5, ncol=2)
colnames(tmp_0)<-c("Saturated Model","Estimated Model")
rownames(tmp_0)<-c("SRMR","d_ULS","d_G","Chi-Square","NFI")
Model_FitFitSummary<-tmp_0
rm(tmp_0)
tmp_0<-matrix(c(
1.0000000000000004, 0.5622611691767169, -0.006925371886645743, 0.20497089097757115, 0.020398318763452834, 0.10925578823562693, 0.018451215589558825, -0.005958542543886513, -0.11711328398618648, -0.04517378191608875, -0.03959942035450674, 0.039655882363278404, 0.9729770259141138, -0.09578153678554134, 0.18033048791231832, 0.11706960803951928,
0.5622611691767169, 1.0000000000000002, -0.029107600536830647, 0.05850475026784735, 0.11140287440655794, 0.0990727241593435, -0.04101897625810358, 0.10851295955905398, 0.055003945584018936, -0.0840316553646255, -0.032437883186412594, 0.14758930983478802, 0.35612059458870443, -0.05887862972088617, 0.05325751523604245, -0.015808588968549295,
-0.006925371886645743, -0.029107600536830647, 0.9999999999999963, 0.14728084729669122, 0.04603548997927002, 0.013887217764324118, -0.009428117911878496, -0.17490340268524002, -0.2863013026761329, -0.05775261946673175, -0.012496749758940127, 0.07452986031494668, 3.018973740317892E-4, -0.24353318574690025, 0.24807661164107303, -0.02303073112890167,
0.20497089097757115, 0.05850475026784735, 0.14728084729669122, 1.0, 0.09803722167726125, -0.07485394151557442, 0.03673658393353594, -0.03804694602973714, -0.3166896469071508, -0.12742046179904878, 0.028304236246906922, 0.31665648919541906, 0.21527546702000605, 0.09876469915535833, 0.04605948242576446, 0.23285717085105376,
0.020398318763452834, 0.11140287440655794, 0.04603548997927002, 0.09803722167726125, 0.9999999999999993, 0.06844417434722637, -0.07428730011755563, 0.10297435255212116, 0.1251230402642662, -0.16172222075833467, -0.11014505072703343, -0.1870624498141699, -0.008056178389073644, -0.06584384458712715, 0.09865014191277292, 0.04189725311473018,
0.10925578823562693, 0.0990727241593435, 0.013887217764324118, -0.07485394151557442, 0.06844417434722637, 1.0, 0.1505657108675626, 0.2096633604214583, -0.020425889587937403, 0.052643897075244195, 0.041018997627460155, 0.17733555524769176, 0.0957929303387366, -0.007564987009381187, -0.0010867869835398853, -0.014115622947021737,
0.018451215589558825, -0.04101897625810358, -0.009428117911878496, 0.03673658393353594, -0.07428730011755563, 0.1505657108675626, 1.0, 0.257409049588635, 0.3947156786670177, -0.03454324680255724, 0.07251299820382043, -0.0833498159460293, 0.032302559178077055, -0.0783652063310486, -0.006511882540253302, -0.13898990062151917,
-0.005958542543886513, 0.10851295955905398, -0.17490340268524002, -0.03804694602973714, 0.10297435255212116, 0.2096633604214583, 0.257409049588635, 1.0000000000000004, 0.24087988930619825, 0.14418827899832604, 0.09762442962005935, 0.18962148846585336, -0.03703173558225876, 0.1156995484683846, -0.0991974008661822, 0.03938008325916394,
-0.11711328398618648, 0.055003945584018936, -0.2863013026761329, -0.3166896469071508, 0.1251230402642662, -0.020425889587937403, 0.3947156786670177, 0.24087988930619825, 0.9999999999999996, 0.29689672783818777, 0.16597926823967962, 0.4388900194150791, -0.14769262954957066, 0.12191292617157533, -0.1912754061307169, -0.0907115581349838,
-0.04517378191608875, -0.0840316553646255, -0.05775261946673175, -0.12742046179904878, -0.16172222075833467, 0.052643897075244195, -0.03454324680255724, 0.14418827899832604, 0.29689672783818777, 1.0000000000000007, 0.15819034851138328, 0.13291765203953582, -0.027581895451807312, 0.1672230364849064, -0.2548126673752029, -0.1129161668349691,
-0.03959942035450674, -0.032437883186412594, -0.012496749758940127, 0.028304236246906922, -0.11014505072703343, 0.041018997627460155, 0.07251299820382043, 0.09762442962005935, 0.16597926823967962, 0.15819034851138328, 1.0000000000000007, 0.10854301856622166, -0.03568893575279776, 0.08584786447939771, -0.07367319455232561, 0.029113312026157728,
0.039655882363278404, 0.14758930983478802, 0.07452986031494668, 0.31665648919541906, -0.1870624498141699, 0.17733555524769176, -0.0833498159460293, 0.18962148846585336, 0.4388900194150791, 0.13291765203953582, 0.10854301856622166, 1.0000000000000013, 0.003600398538312016, 0.19683065771516967, -0.10756079266099394, 0.16025576435516412,
0.9729770259141138, 0.35612059458870443, 3.018973740317892E-4, 0.21527546702000605, -0.008056178389073644, 0.0957929303387366, 0.032302559178077055, -0.03703173558225876, -0.14769262954957066, -0.027581895451807312, -0.03568893575279776, 0.003600398538312016, 0.9999999999999996, -0.09179033501740148, 0.18889766278451997, 0.1366992325114846,
-0.09578153678554134, -0.05887862972088617, -0.24353318574690025, 0.09876469915535833, -0.06584384458712715, -0.007564987009381187, -0.0783652063310486, 0.1156995484683846, 0.12191292617157533, 0.1672230364849064, 0.08584786447939771, 0.19683065771516967, -0.09179033501740148, 1.0000000000000009, -0.8038077140894139, 0.4219938973929408,
0.18033048791231832, 0.05325751523604245, 0.24807661164107303, 0.04605948242576446, 0.09865014191277292, -0.0010867869835398853, -0.006511882540253302, -0.0991974008661822, -0.1912754061307169, -0.2548126673752029, -0.07367319455232561, -0.10756079266099394, 0.18889766278451997, -0.8038077140894139, 1.0, 0.20012380704116323,
0.11706960803951928, -0.015808588968549295, -0.02303073112890167, 0.23285717085105376, 0.04189725311473018, -0.014115622947021737, -0.13898990062151917, 0.03938008325916394, -0.0907115581349838, -0.1129161668349691, 0.029113312026157728, 0.16025576435516412, 0.1366992325114846, 0.4219938973929408, 0.20012380704116323, 1.0000000000000022
), byrow=TRUE, nrow=16, ncol=16)
colnames(tmp_0)<-c("Impak","Keperluan","KeperluanRekabentuk10","KeperluanRekabentuk11","KeperluanRekabentuk12","KeperluanRekabentuk3","KeperluanRekabentuk4","KeperluanRekabentuk5","KeperluanRekabentuk6","KeperluanRekabentuk9","KeperluanRekebentuk7","KeperluanRekebentuk8","Objektif","Pelaksanaan1","Pelaksanaan2","Pelaksanaan3")
rownames(tmp_0)<-c("Impak","Keperluan","KeperluanRekabentuk10","KeperluanRekabentuk11","KeperluanRekabentuk12","KeperluanRekabentuk3","KeperluanRekabentuk4","KeperluanRekabentuk5","KeperluanRekabentuk6","KeperluanRekabentuk9","KeperluanRekebentuk7","KeperluanRekebentuk8","Objektif","Pelaksanaan1","Pelaksanaan2","Pelaksanaan3")
ResidualsOuterModelResidualCorrelation<-tmp_0
rm(tmp_0)
tmp_0<-matrix(c(
1.0000000000000009, 0.42916041477810374, 0.2068565246002545,
0.42916041477810374, 0.9999999999999991, 0.03492480490093953,
0.2068565246002545, 0.03492480490093953, 1.000000000000001
), byrow=TRUE, nrow=3, ncol=3)
colnames(tmp_0)<-c("Keperluan Rekabentuk","Operasi Strategik","Pelaksanaan")
rownames(tmp_0)<-c("Keperluan Rekabentuk","Operasi Strategik","Pelaksanaan")
LatentVariableLatentVariableCovariances<-tmp_0
rm(tmp_0)
tmp_0<-matrix(c(
0.0, 1.0, 1.2257585735334566,
0.0, 0.0, 1.2257585735334595,
0.0, 0.0, 0.0
), byrow=TRUE, nrow=3, ncol=3)
colnames(tmp_0)<-c("Keperluan Rekabentuk","Operasi Strategik","Pelaksanaan")
rownames(tmp_0)<-c("Keperluan Rekabentuk","Operasi Strategik","Pelaksanaan")
CollinearityStatistics_VIF_InnerVIFValues<-tmp_0
rm(tmp_0)
tmp_0<-matrix(c(
-1.6737453174273193E-16, 0.016480205395394666, -3.1012886917389846, 1.5880452528010334, 0.9998425418028589, 0.15863148089123458, -0.23829033712750486, 132.0,
3.776440439823449E-16, -0.220849087909176, -2.418823094068356, 1.9809211166846492, 0.9671937354394424, -0.21691987877239738, 0.1691695099444917, 132.0,
5.040160208383523E-16, -0.18526524492087273, -2.2990819527137694, 1.641262317335563, 0.9668359437949834, -0.300348897460609, -0.26159726297354813, 132.0,
1.0261152197293113E-16, -0.10754974232174502, -2.0435330658830395, 1.9385849679730087, 0.8960025924106344, -0.6719745391690526, -0.09205274797978708, 132.0,
9.857434733793057E-16, -0.31751605615001977, -1.414248517780981, 1.689827999104776, 0.9619032415447409, -1.7428112819859456, 0.06913000659854301, 132.0,
4.1549255618547523E-16, -0.401365627836603, -2.2131508974279286, 1.6365258993100487, 0.9836870790672467, -0.8059369059218588, -0.07068321274926968, 132.0,
1.1775092685418327E-17, -0.18592562539987806, -2.2305919508040466, 1.7974857214139917, 0.9715584934833881, -0.056419721841749926, -0.08245688013679844, 132.0,
-9.167750733647126E-16, 0.7922948239210067, -2.736832770854579, 1.0258180012383085, 0.9981944457051002, -0.7789891720457112, -0.5659891190355776, 132.0,
4.583875366823563E-17, 0.006536743298676706, -2.964469624259766, 2.3687917341391547, 0.8995887090044208, 0.11302026232554852, -0.14790744909036585, 132.0,
-4.188568683813091E-16, -0.3703515057580319, -2.408810774656428, 1.5385965338718566, 0.9761183551411494, -0.772056222821428, -0.3436507471905951, 132.0,
-8.652590428660074E-17, 0.10491632326367659, -1.6052277701939983, 1.853088254738512, 0.9944783643203355, -0.41993439196511995, 0.05688071327118806, 132.0,
-1.6905668784064883E-16, -0.1998561766091988, -2.2821856384097647, 1.5172590146168021, 0.9242299290953859, -0.7782200637227112, -0.0677415394802007, 132.0,
-1.4550650246981218E-16, 0.04674687040741252, -1.205369978722487, 0.8044772409152886, 0.4206932438736312, 0.09982888590979888, -0.27356776492349505, 132.0,
1.2868494149064315E-16, 0.028495621006705885, -1.141555123284785, 1.0051655735406027, 0.5300439291244611, -0.7101924437254663, -0.01680938794693481, 132.0,
-3.801672781292203E-16, 0.08615119242073963, -1.8524549841599438, 1.3452872083363692, 0.8735987144808036, -0.9349791524090301, -0.40423029560407564, 132.0,
-2.4265101712451337E-16, -0.15468199982811323, -1.8866713464923923, 1.5773073468361658, 0.9780526748861842, -0.5278854377794882, -0.14969788075862908, 132.0
), byrow=TRUE, nrow=16, ncol=8)
colnames(tmp_0)<-c("Mean","Median","Min","Max","Standard Deviation","Excess Kurtosis","Skewness","Number of Observations Used")
rownames(tmp_0)<-c("Impak","Keperluan","KeperluanRekabentuk10","KeperluanRekabentuk11","KeperluanRekabentuk12","KeperluanRekabentuk3","KeperluanRekabentuk4","KeperluanRekabentuk5","KeperluanRekabentuk6","KeperluanRekabentuk9","KeperluanRekebentuk7","KeperluanRekebentuk8","Objektif","Pelaksanaan1","Pelaksanaan2","Pelaksanaan3")
ResidualsOuterModelResidualDescriptives<-tmp_0
rm(tmp_0)
tmp_0
tmp_0<-matrix(c(
0.0, 1.0, 1.2257585735334566,
0.0, 0.0, 1.2257585735334595,
0.0, 0.0, 0.0
), byrow=TRUE, nrow=3, ncol=3)
colnames(tmp_0)<-c("Keperluan Rekabentuk","Operasi Strategik","Pelaksanaan")
rownames(tmp_0)<-c("Keperluan Rekabentuk","Operasi Strategik","Pelaksanaan")
CollinearityStatistics_VIF_InnerVIFValues<-tmp_0
tmp_0
CollinearityStatistics_VIF_InnerVIFValues
rm(tmp_0)
tmp_0<-matrix(c(
-1.6737453174273193E-16, 0.016480205395394666, -3.1012886917389846, 1.5880452528010334, 0.9998425418028589, 0.15863148089123458, -0.23829033712750486, 132.0,
3.776440439823449E-16, -0.220849087909176, -2.418823094068356, 1.9809211166846492, 0.9671937354394424, -0.21691987877239738, 0.1691695099444917, 132.0,
5.040160208383523E-16, -0.18526524492087273, -2.2990819527137694, 1.641262317335563, 0.9668359437949834, -0.300348897460609, -0.26159726297354813, 132.0,
1.0261152197293113E-16, -0.10754974232174502, -2.0435330658830395, 1.9385849679730087, 0.8960025924106344, -0.6719745391690526, -0.09205274797978708, 132.0,
9.857434733793057E-16, -0.31751605615001977, -1.414248517780981, 1.689827999104776, 0.9619032415447409, -1.7428112819859456, 0.06913000659854301, 132.0,
4.1549255618547523E-16, -0.401365627836603, -2.2131508974279286, 1.6365258993100487, 0.9836870790672467, -0.8059369059218588, -0.07068321274926968, 132.0,
1.1775092685418327E-17, -0.18592562539987806, -2.2305919508040466, 1.7974857214139917, 0.9715584934833881, -0.056419721841749926, -0.08245688013679844, 132.0,
-9.167750733647126E-16, 0.7922948239210067, -2.736832770854579, 1.0258180012383085, 0.9981944457051002, -0.7789891720457112, -0.5659891190355776, 132.0,
4.583875366823563E-17, 0.006536743298676706, -2.964469624259766, 2.3687917341391547, 0.8995887090044208, 0.11302026232554852, -0.14790744909036585, 132.0,
-4.188568683813091E-16, -0.3703515057580319, -2.408810774656428, 1.5385965338718566, 0.9761183551411494, -0.772056222821428, -0.3436507471905951, 132.0,
-8.652590428660074E-17, 0.10491632326367659, -1.6052277701939983, 1.853088254738512, 0.9944783643203355, -0.41993439196511995, 0.05688071327118806, 132.0,
-1.6905668784064883E-16, -0.1998561766091988, -2.2821856384097647, 1.5172590146168021, 0.9242299290953859, -0.7782200637227112, -0.0677415394802007, 132.0,
-1.4550650246981218E-16, 0.04674687040741252, -1.205369978722487, 0.8044772409152886, 0.4206932438736312, 0.09982888590979888, -0.27356776492349505, 132.0,
1.2868494149064315E-16, 0.028495621006705885, -1.141555123284785, 1.0051655735406027, 0.5300439291244611, -0.7101924437254663, -0.01680938794693481, 132.0,
-3.801672781292203E-16, 0.08615119242073963, -1.8524549841599438, 1.3452872083363692, 0.8735987144808036, -0.9349791524090301, -0.40423029560407564, 132.0,
-2.4265101712451337E-16, -0.15468199982811323, -1.8866713464923923, 1.5773073468361658, 0.9780526748861842, -0.5278854377794882, -0.14969788075862908, 132.0
), byrow=TRUE, nrow=16, ncol=8)
tmp_0
colnames(tmp_0)<-c("Mean","Median","Min","Max","Standard Deviation","Excess Kurtosis","Skewness","Number of Observations Used")
rownames(tmp_0)<-c("Impak","Keperluan","KeperluanRekabentuk10","KeperluanRekabentuk11","KeperluanRekabentuk12","KeperluanRekabentuk3","KeperluanRekabentuk4","KeperluanRekabentuk5","KeperluanRekabentuk6","KeperluanRekabentuk9","KeperluanRekebentuk7","KeperluanRekebentuk8","Objektif","Pelaksanaan1","Pelaksanaan2","Pelaksanaan3")
tmp_0
ResidualsOuterModelResidualDescriptives<-tmp_0
rm(tmp_0)
IndirectEffectsTotalIndirectEffects
ConstructReliabilityandValidity
DiscriminantValidityFornell_LarckerCriterion
DiscriminantValidityHeterotrait_MonotraitRatio_HTMT_
DiscriminantValidityCrossLoadings
setwd("D:/GitHub/COVID-19_Malaysia")
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
install.packages("usethis")
library(devtools)
install.packages("pkgbuild")
library(devtools)
install.packages("remotes")
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
setwd("D:/GitHub/COVID-19_Malaysia")
setwd("E:/iCMS2021")
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
setwd("D:/R/Teaching/MAT111 - Business Mathematics/MAT111 - Business Mathematics")
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
install.packages("DataEditR")
DataEditR:::data_edit()
DataEditR:::data_edit()
DataEditR:::data_edit()
DataEditR:::data_edit()
DataEditR:::data_edit()
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970/01/01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://https://csv-covid-malaysia.herokuapp.com/?fbclid=IwAR12KLWvAwdM7xjtepCqLgdxLcmjExkbiM1V-6QSc_tsgT4YmzaNwQvCiHw/download", string_date, "death", sep = "-")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021/05/01", "2021/05/24")
mydownload("2021/05/01", "2021/05/24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970/01/01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://https://csv-covid-malaysia.herokuapp.com/?fbclid=IwAR12KLWvAwdM7xjtepCqLgdxLcmjExkbiM1V-6QSc_tsgT4YmzaNwQvCiHw/download", string_date, "death", sep = "-")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021/05/01", "2021/05/24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970/01/01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/?fbclid=IwAR12KLWvAwdM7xjtepCqLgdxLcmjExkbiM1V-6QSc_tsgT4YmzaNwQvCiHw/download", string_date, "death", sep = "-")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021/05/01", "2021/05/24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970-01-01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/?fbclid=IwAR12KLWvAwdM7xjtepCqLgdxLcmjExkbiM1V-6QSc_tsgT4YmzaNwQvCiHw/download", string_date, "death", sep = "-")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021-05-01", "2021-05-24")
mydownload("2021-05-15", "2021-05-24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970-01-01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/?fbclid=IwAR12KLWvAwdM7xjtepCqLgdxLcmjExkbiM1V-6QSc_tsgT4YmzaNwQvCiHw/download", string_date, "death", sep = "-")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021-05-15", "2021-05-24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970-01-01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("C:/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/?fbclid=IwAR12KLWvAwdM7xjtepCqLgdxLcmjExkbiM1V-6QSc_tsgT4YmzaNwQvCiHw/download", string_date, "death", sep = "-")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021-05-15", "2021-05-24")
mydownload("2021-05-01", "2021-05-24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970-01-01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("C:/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/download", string_date, "death", sep = "-")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021-05-01", "2021-05-24")
m
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970-01-01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("C:/Users/kaman/Desktop/covid19/", string_date, ".csv")
string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/download", string_date, "death", sep = "/")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021-05-01", "2021-05-24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970-01-01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("C:/Users/kaman/Desktop/covid19/", string_date, ".csv")
#string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/download", string_date, "death", sep = "/")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2021-05-01", "2021-05-24")
mydownload("2020-03-21", "2021-05-24")
mydownload <- function (start_date, end_date) {
start_date <- as.Date(start_date)  ## convert to Date object
end_date <- as.Date(end_date)  ## convert to Date object
dates <- as.Date("1970-01-01") + (start_date : end_date)  ## date sequence
## a loop to download data
for (i in 1:length(dates)) {
string_date <- as.character(dates[i])
myfile <- paste0("C:/Users/kaman/Desktop/covid19/", string_date, ".csv")
#string_date <- gsub("-", "/", string_date)  ## replace "-" with "/"
myurl <- paste("https://csv-covid-malaysia.herokuapp.com/download", string_date, "death", sep = "/")
download.file(url = myurl, destfile = myfile, quiet = TRUE)
}
}
mydownload("2020-03-21", "2021-05-24")
mydownload("2021-05-14", "2021-05-24")
View(mydownload)
View(mydownload)
mydownload("2021-04-01", "2021-04-30")
mydownload("2021-03-01", "2021-03-31")
mydownload("2021-02-01", "2021-02-28")
mydownload("2021-01-01", "2021-01-31")
update.packages("rticles")
install.packages("rticles")
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("ropenscilabs/gramr")
install.packages("hunspell")
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
setwd("D:/R/R Project/iCMS2021/latex to r markdown")
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
#------------------ Packages ------------------
library(flexdashboard)
# install.packages("devtools")
# devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(coronavirus)
data(coronavirus)
# update_dataset()
# View(coronavirus)
# max(coronavirus$date)
`%>%` <- magrittr::`%>%`
#------------------ Parameters ------------------
# Set colors
# https://www.w3.org/TR/css-color-3/#svg-color
confirmed_color <- "purple"
active_color <- "#1f77b4"
recovered_color <- "forestgreen"
death_color <- "red"
#------------------ Data ------------------
df <- coronavirus %>%
# dplyr::filter(date == max(date)) %>%
dplyr::filter(country == "Malaysia") %>%
dplyr::group_by(country, type) %>%
dplyr::summarise(total = sum(cases)) %>%
tidyr::pivot_wider(
names_from = type,
values_from = total
) %>%
dplyr::mutate(unrecovered = confirmed - ifelse(is.na(recovered), 0, recovered) - ifelse(is.na(death), 0, death)) %>%
# dplyr::mutate(unrecovered = confirmed - ifelse(is.na(death), 0, death)) %>%
dplyr::arrange(-confirmed) %>%
dplyr::ungroup() %>%
dplyr::mutate(country = dplyr::if_else(country == "United Arab Emirates", "UAE", country)) %>%
dplyr::mutate(country = dplyr::if_else(country == "Mainland China", "China", country)) %>%
dplyr::mutate(country = dplyr::if_else(country == "North Macedonia", "N.Macedonia", country)) %>%
dplyr::mutate(country = trimws(country)) %>%
dplyr::mutate(country = factor(country, levels = country))
df_daily <- coronavirus %>%
dplyr::filter(country == "Malaysia") %>%
dplyr::group_by(date, type) %>%
dplyr::summarise(total = sum(cases, na.rm = TRUE)) %>%
tidyr::pivot_wider(
names_from = type,
values_from = total
) %>%
dplyr::arrange(date) %>%
dplyr::ungroup() %>%
dplyr::mutate(active = confirmed - death - recovered) %>%
# dplyr::mutate(active = confirmed - death) %>%
dplyr::mutate(
confirmed_cum = cumsum(confirmed),
death_cum = cumsum(death),
recovered_cum = cumsum(recovered),
active_cum = cumsum(active)
)
df1 <- coronavirus %>% dplyr::filter(date == max(date))
valueBox(
value = paste(max(coronavirus$date)),
caption = "Date Updated",
icon = "fas fa-calendar",
color = "black"
)
new_cases = sum(df$confirmed) - sum(df$death) - sum(df$recovered) - sum(df$unrecovered)
new_cases = sum(df$confirmed) - sum(df$death) - sum(df$recovered) - sum(df$unrecovered)
new_cases
new_cases = sum(df$confirmed) - sum(df$unrecovered, na.rm = TRUE) - sum(df$recovered, na.rm = TRUE) - sum(df$death, na.rm = TRUE)
new_cases
new_cases = sum(df$confirmed)
new_cases
confirm = sum(df$confirmed)
active = sum(df$unrecovered, na.rm = TRUE)
confirm
active
kes = sum(df$confirmed)
aktif = sum(df$unrecovered, na.rm = TRUE)
sembuh = sum(df$recovered, na.rm = TRUE)
kes
aktif
sembuh
kes = sum(df$confirmed)
aktif = sum(df$unrecovered, na.rm = TRUE)
sembuh = sum(df$recovered, na.rm = TRUE)
mati = sum(df$death, na.rm = TRUE)
kes
aktif
sembuh
mati
kes = sum(df$confirmed)
aktif = sum(df$unrecovered, na.rm = TRUE)
sembuh = sum(df$recovered, na.rm = TRUE)
mati = sum(df$death, na.rm = TRUE)
baru = kes - (aktif + sembuh + mati)
kes
aktif
sembuh
mati
baru
kes = sum(df$confirmed)
aktif = sum(df$unrecovered, na.rm = TRUE)
sembuh = sum(df$recovered, na.rm = TRUE)
mati = sum(df$death, na.rm = TRUE)
baru = aktif - sembuh - mati)
kes = sum(df$confirmed)
aktif = sum(df$unrecovered, na.rm = TRUE)
sembuh = sum(df$recovered, na.rm = TRUE)
mati = sum(df$death, na.rm = TRUE)
baru = aktif - sembuh - mati
kes
aktif
sembuh
mati
baru
kes = sum(df$confirmed)
aktif = sum(df$unrecovered, na.rm = TRUE)
sembuh = sum(df$recovered, na.rm = TRUE)
mati = sum(df$death, na.rm = TRUE)
baru = kes - sembuh - mati
kes
aktif
sembuh
mati
baru
df$confirmed(max(coronavirus$date))
df$confirmed
df$confirmed - df$confirmed[-1]
df$confirmed - tail(df$confirmed, n=2)
df$confirmed
tail(df$confirmed, n=2)
tail(df$confirmed)
tail(date)
tail(coronavirus$date)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
library(devtools)
devtools::install_github("RamiKrispin/coronavirus", force = TRUE)
